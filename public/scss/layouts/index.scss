// SCSS file containing CSS styles for index.html



// === USE ====================================
@use "sass:map";
@use '../abstracts' as a;
@use '../base' as b;
@use '../components' as c;


/* === VARIABLES ============================== */
body{
   /* recycle categories */
   --recycleCat-grid: 1fr 1fr 1fr;
   --recycleCat-grid-gap: min(5vw, calc(var(--main-max-width) * 0.05));
   --recycleCat-h2-fontsize: min(4.5vw, calc(var(--main-max-width) * 0.045));

   /* map */
   --map-illu-pad-left: min(13vw, calc(var(--main-max-width) * 0.13));
   --map-route-strokewidth: 8px;
   --map-categories-position: absolute;
   --map-categories-flex: column nowrap;
   --map-button-borderwidth: min(0.4vw, calc(var(--main-max-width) * 0.004));
}

@media only screen and (max-width: b.$breakpoint-tablet){
   body{
      /* recycle categories */
      --recycleCat-grid: 1fr 1fr;
      --recycleCat-grid-gap: 8vw;
      --recycleCat-h2-fontsize: 6.8vw;

      /* map */
      --map-illu-pad-left: 0;
      --map-route-strokewidth: 9px;
      --map-categories-position: static;
      --map-categories-flex: row nowrap;
      --map-categories-top: 3vw;
      --map-button-borderwidth: 0.5vw;
   }
}

@media only screen and (max-width: b.$breakpoint-mobile){
   body{
      /* recycle categories */
      --recycleCat-grid: 1fr;
      --recycleCat-grid-gap: 20vw;
      --recycleCat-h2-fontsize: 16vw;

      /* map */
      --map-route-strokewidth: 13px;
      --map-categories-top: 7vw;
      --map-button-borderwidth: 1vw;
   }
}



/* ============================================
   INDEX PAGE
   ============================================ */

/* === WHOLE PAGE ============================= */
html, body{
   background-color: var(--clr-0);
}

.text{
   &--xl, &--lg, &--md &--sm{
      color: var(--clr-800);
   }

   &--xl a, &--lg a{
      color: var(--clr-800a);
   }

   &--accent{
      color: var(--clr-800a);
   }
}

.tooltip::after{
   background-color: var(--clr-50);
}

.button{
   &--lg{
      color: var(--clr-900);
      background-color: var(--clr-50);
      border-color: var(--clr-50);

      &:hover{
         color: var(--clr-1000);
         background-color: var(--clr-100);
         border-color: var(--clr-100);
      }

      &:focus-visible{
         border-color: var(--clr-border);
         color: var(--clr-1000);
      }
   }
}


/* === TOP BAR ================================ */
/* logotype */
.logotype{
   /* flexbox */
   display: flex;
   align-items: center;
   width: 5.5rem;
}

 /* theme picker */
 .themepicker {
   &__list{
       background-color: var(--clr-50);
   }

   &__btn{
      /* tooltip */
      &::after{
         color: var(--clr-1000);
      }
   }

   &__light{
      &--0{
         fill: map.get(a.$light, 0);
      }

      &--100{
         fill: map.get(a.$light, 100);
      }

      &--800{
         fill: map.get(a.$light, 800);
      }
   }

   &__dark{
      &--0{
         fill: map.get(a.$dark, 0);
      }

      &--100{
         fill: map.get(a.$dark, 100);
      }

      &--800{
         fill: map.get(a.$dark, 800);
      }
   }

   &__hc{
      &--0{
         fill: map.get(a.$hc, 0);
      }

      &--100{
         fill: map.get(a.$hc, 100);
      }

      &--800{
         fill: map.get(a.$hc, 800);
      }
   }
}


/* === MAIN =================================== */
/* hero text */
.hero{
   &__city{
      color: var(--clr-800a);
   }
}

.quicklink{
   padding-bottom: 0;
}

/* recycle categories */
.recycleCat{
   &__container{
      padding-top: var(--main-pad-lg);
      padding-bottom: var(--main-pad-lg);
      /* grid */
      display: grid;
      grid-template-columns: var(--recycleCat-grid);
      gap: var(--recycleCat-grid-gap);
   }

   &__item{
      position: relative;

      .illu__bg{
         stroke-miterlimit: 10;
         stroke-width: 2px;
      }
   }

   &__link{
      display: block;
      z-index: 1000;

      &:focus-visible .illu__bg{
         stroke: var(--clr-border) !important;
      }
   }

   &__parallaxContainer{
      position: relative;
   }

   

   &__h2{
      font-size: var(--recycleCat-h2-fontsize);
      display: block;
   }
}

.carton{
   &-link{
      position: relative;
      top: 0;
   }

   &-illu{
      width: min(11.5vw, calc(var(--main-max-width) * 0.115));
      top: min(7vw, calc(var(--main-max-width) * 0.07)) !important;
      left: min(7vw, calc(var(--main-max-width) * 0.07)) !important;
   }

   &-h2{
      top: min(15vw, calc(var(--main-max-width) * 0.15)) !important;
      left: min(4vw, calc(var(--main-max-width) * 0.04)) !important;
   }
}

.cardboard{
   &-link{
      position: relative;
      top: max(calc(var(--main-max-width) * -0.02), -2vw);
   }

   &-illu{
      width: min(21vw, calc(var(--main-max-width) * 0.21));
      top: min(6vw, calc(var(--main-max-width) * 0.06)) !important;
      left: min(2.5vw, calc(var(--main-max-width) * 0.025)) !important;
   }

   &-h2{
      top: min(16vw, calc(var(--main-max-width) * 0.16)) !important;
      left: min(2vw, calc(var(--main-max-width) * 0.02)) !important;
   }
}

.paper{
   &-link{
      position: relative;
      top: max(calc(var(--main-max-width) * -0.08), -8vw);
   }

   &-illu{
      width: min(18vw, calc(var(--main-max-width) * 0.18));
      top: min(10vw, calc(var(--main-max-width) * 0.1)) !important;
      left: min(5vw, calc(var(--main-max-width) * 0.05)) !important;
   }

   &-h2{
      top: min(18vw, calc(var(--main-max-width) * 0.18)) !important;
      left: min(8vw, calc(var(--main-max-width) * 0.08)) !important;
   }
}

.metal{
   &-link{
      position: relative;
      top: 0;
   }

   &-illu{
      width: min(8.8vw, calc(var(--main-max-width) * 0.088));
      top: min(7.5vw, calc(var(--main-max-width) * 0.075)) !important;
      left: min(8.5vw, calc(var(--main-max-width) * 0.085)) !important;
   }

   &-h2{
      top: min(16vw, calc(var(--main-max-width) * 0.16)) !important;
      left: min(7.2vw, calc(var(--main-max-width) * 0.072)) !important;
   }
}

.glass{
   &-link{
      position: relative;
      top: max(calc(var(--main-max-width) * -0.03), -3vw);
   }

   &-h2{
      top: min(16vw, calc(var(--main-max-width) * 0.16)) !important;
      left: min(10vw, calc(var(--main-max-width) * 0.1)) !important;
   }
}

.plastic{
   &-link{
      position: relative;
      top: max(calc(var(--main-max-width) * -0.06), -6vw);
   }

   &-illu{
      width: min(7.5vw, calc(var(--main-max-width) * 0.075));
      top: min(7vw, calc(var(--main-max-width) * 0.07)) !important;
      left: min(9vw, calc(var(--main-max-width) * 0.09)) !important;
   }

   &-h2{
      top: min(15vw, calc(var(--main-max-width) * 0.15)) !important;
      left: min(5vw, calc(var(--main-max-width) * 0.05)) !important;
   }
}


/* === MAP ==================================== */
.map{
   position: relative;
   padding: var(--main-pad-vrt) 0 var(--main-pad-lg);

   &__main{
      position: relative;
      padding-left: var(--map-illu-pad-left);
   }

   &__illu{
      fill: var(--clr-100);
   }

   &__route{
      &--svg{
         position: absolute;
         top: 0;
         left: var(--map-illu-pad-left);

         &.top{
            z-index: 100;
         }
      }

      &--path{
         fill: none;
         stroke-linecap: round;
         stroke-linejoin: round;
         stroke-width: var(--map-route-strokewidth);
      }
   }

   .routePaper{
      stroke: var(--clr-paper-500);

      &--1{
         /* both values should be the length of the SVG path, see data-length attribute for the path */
         stroke-dasharray: 11.55093765258789;
         stroke-dashoffset: 11.55093765258789;
         transition: stroke-dashoffset 0.5s;
      }

      &--2{
         /* both values should be the length of the SVG path, see data-length attribute for the path */
         stroke-dasharray: 801.2872924804688;
         stroke-dashoffset: 801.2872924804688;
         transition: stroke-dashoffset 0.8s;
      }

      &--3{
         /* both values should be the length of the SVG path, see data-length attribute for the path */
         stroke-dasharray: 1049.568359375;
         stroke-dashoffset: 1049.568359375;
         transition: stroke-dashoffset 1.05s;
      }

      &--4{
         /* both values should be the length of the SVG path, see data-length attribute for the path */
         stroke-dasharray: 1013.46435546875;
         stroke-dashoffset: 1013.46435546875;
         transition: stroke-dashoffset 1.01s;
      }

      &--5{
         /* both values should be the length of the SVG path, see data-length attribute for the path */
         stroke-dasharray: 594.1727294921875;
         stroke-dashoffset: 594.1727294921875;
         transition: stroke-dashoffset 0.6s;
      }
   }



   .routeMetal{
      stroke: var(--clr-metal-500);

      &--1{
         /* both values should be the length of the SVG path, see data-length attribute for the path */
         stroke-dasharray: 14.224234580993652;
         stroke-dashoffset: 14.224234580993652;
         transition: stroke-dashoffset 0.5s;
      }

      &--2{
         /* both values should be the length of the SVG path, see data-length attribute for the path */
         stroke-dasharray: 28.32890510559082;
         stroke-dashoffset: 28.32890510559082;
         transition: stroke-dashoffset 0.5s;
      }

      &--3{
         /* both values should be the length of the SVG path, see data-length attribute for the path */
         stroke-dasharray: 65.65030670166016;
         stroke-dashoffset: 65.65030670166016;
         transition: stroke-dashoffset 0.66s;
      }
   }

   .routeGlass{
      stroke: var(--clr-glass-500);
      
      &--1{
         /* both values should be the length of the SVG path, see data-length attribute for the path */
         stroke-dasharray: 10.16637897491455;
         stroke-dashoffset: 10.16637897491455;
         transition: stroke-dashoffset 0.2s;
      }
   }

   .routePlastic{
      stroke: var(--clr-plastic-500);
      
      &--1{
         /* both values should be the length of the SVG path, see data-length attribute for the path */
         stroke-dasharray: 110.49772644042969;
         stroke-dashoffset: 110.49772644042969;
         transition: stroke-dashoffset 0.5s;
      }

      &--2{
         /* both values should be the length of the SVG path, see data-length attribute for the path */
         stroke-dasharray: 89.92709350585938;
         stroke-dashoffset: 89.92709350585938;
         transition: stroke-dashoffset 0.5s;
      }

      &--3{
         /* both values should be the length of the SVG path, see data-length attribute for the path */
         stroke-dasharray: 26.862102508544922;
         stroke-dashoffset: 26.862102508544922;
         transition: stroke-dashoffset 0.5s;
      }

      &--4{
         /* both values should be the length of the SVG path, see data-length attribute for the path */
         stroke-dasharray: 64.72081756591797;
         stroke-dashoffset: 64.72081756591797;
         transition: stroke-dashoffset 0.5s;
      }

      &--5{
         /* both values should be the length of the SVG path, see data-length attribute for the path */
         stroke-dasharray: 51.69309616088867;
         stroke-dashoffset: 51.69309616088867;
         transition: stroke-dashoffset 0.5s;
      }
   }

   &__menu{
      position: var(--map-categories-position);
      bottom: min(6vw, calc(var(--main-max-width) * 0.06));
      left: 0;
   }

   &__cattitle{
      padding-bottom: var(--footer-link-pad-bottom);
   }

   &__categories{
      /* flexbox */
      display: flex;
      flex-flow: var(--map-categories-flex);
      
      li{
         padding-bottom: var(--footer-link-pad-bottom);
      }

      .button--lg{
         border-width: var(--map-button-borderwidth);
      }

      button#mapPaper{
         color: var(--clr-paper-1000);
         background-color: var(--clr-paper-100);
         border-color: rgba(0, 0, 0, 0);

         &:hover{
            color: var(--clr-paper-1100);
         }

         &:focus-visible{
            border-color: var(--clr-paper-500);
            color: var(--clr-paper-1100);
         }
      }

      button#mapMetal{
         color: var(--clr-metal-1000);
         background-color: var(--clr-metal-100);
         border-color: rgba(0, 0, 0, 0);

         &:hover{
            color: var(--clr-metal-1100);
         }

         &:focus-visible{
            border-color: var(--clr-metal-500);
            color: var(--clr-metal-1100);
         }
      }

      button#mapGlass{
         color: var(--clr-glass-1000);
         background-color: var(--clr-glass-100);
         border-color: rgba(0, 0, 0, 0);

         &:hover{
            color: var(--clr-glass-1100);
         }

         &:focus-visible, .paper button#paper{
            border-color: var(--clr-glass-500);
            color: var(--clr-glass-1100);
         }
      }

      button#mapPlastic{
         color: var(--clr-plastic-1000);
         background-color: var(--clr-plastic-100);
         border-color: rgba(0, 0, 0, 0);

         &:hover{
            color: var(--clr-plastic-1100);
         }

         &:focus-visible, .paper button#paper{
            border-color: var(--clr-plastic-500);
            color: var(--clr-plastic-1100);
         }
      }
   }
}

/* show routes if appropriate class is present */
.paper .routePaper,
.metal .routeMetal,
.glass .routeGlass,
.plastic .routePlastic{
   stroke-dashoffset: 0;
}

.paper button#mapPaper{
   border-color: var(--clr-paper-500);
}

.metal button#mapMetal{
   border-color: var(--clr-metal-500);
}

.glass button#mapGlass{
   border-color: var(--clr-glass-500);
}

.plastic button#mapPlastic{
   border-color: var(--clr-plastic-500);
}


/* === OTHER THAN RECYCLE ===================== */
#nottrash{
   padding-top: var(--main-pad-xl);
}


/* === FOOTER ================================= */
footer{
   background-color: var(--clr-50);

   .text{
      &--lg a:hover, &--lg a:focus{
         color: var(--clr-800a);
         background-color: var(--clr-0);
      }

      &--sm a:hover, &--sm a:focus, &--xs a:hover, &--xs a:focus{
         color: var(--clr-1000);
         background-color: var(--clr-0);
      }
   }

   .button{
      &--lg{
         color: var(--clr-800);
         background-color: var(--clr-0);
         border-color: var(--clr-0);

         &:hover{
            color: var(--clr-900);
            background-color: var(--clr-0);
            border-color: var(--clr-0);
         }

         &:focus-visible{
            border-color: var(--clr-border);
            color: var(--clr-900);
         }
      }
   }
}

.footer{
   &__transition{
      background-color: var(--clr-0);
   }
}


/* ========================================
   BREAKPOINTS
   ======================================== */

@media only screen and (max-width: b.$breakpoint-tablet){
   .quicklink{
      padding-bottom: var(--main-pad-sm);
   }

   .recycleCat{
      &__container{
         padding-top: var(--main-pad-md);
      }
   }
   
   .carton{
      &-illu{
         width: 17.5vw;
         top: 10vw !important;
         left: 11vw !important;
      }
   
      &-h2{
         top: 22vw !important;
         left: 7vw !important;
      }
   }
   
   .cardboard{
      &-link{
         top: -2vw;
      }

      &-illu{
         width: 31vw;
         top: 9vw !important;
         left: 4.5vw !important;
      }

      &-h2{
         top: 24vw !important;
         left: 3vw !important;
      }
   }
   
   .paper{
      &-link{
         top: 0;
      }

      &-illu{
         width: 27vw;
         top: 16vw !important;
         left: 8vw !important;
      }

      &-h2{
         top: 26vw !important;
         left: 12vw !important;
      }
   }
   
   .metal{
      &-link{
         top: -2vw;
      }

      &-illu{
         width: 13vw;
         top: 12vw !important;
         left: 13vw !important;
      }

      &-h2{
         top: 24vw !important;
         left: 11vw !important;
      }
   }

   .glass{
      &-link{
         top: 0;
      }

      &-h2{
         top: 24vw !important;
         left: 15vw !important;
      }
   }

   .plastic{
      &-link{
         top: -5vw;
      }

      &-illu{
         width: 11vw;
         top: 12vw !important;
         left: 13.5vw !important;
      }

      &-h2{
         top: 21vw !important;
         left: 8vw !important;
      }
   }

   /* map */
   .map{
      padding-bottom: calc(var(--main-pad-vrt) - var(--footer-link-pad-bottom));
      &__menu{
         padding-top: var(--map-categories-top);
      }

      &__categories{
         li{
            padding-right: var(--footer-link-pad-right);
         }
      }
   }
}

@media only screen and (max-width: b.$breakpoint-mobile){
   .recycleCat{
      &__container{
         margin: 0 calc(-1 * var(--main-pad-hrz));
         overflow: hidden;
      }
   }

   .carton{
      &-link{
         left: -10vw;
      }

      &-illu{
         width: 42vw;
         top: 25vw !important;
         left: 27vw !important;
      }
   
      &-h2{
         top: 56vw !important;
         left: 18vw !important;
      }
   }
   
   .cardboard{
      &-link{
         top: 0;
         right: -10vw;
      }

      &-illu{
         width: 70vw;
         top: 26vw !important;
         left: 12vw !important;
      }

      &-h2{
         top: 60vw !important;
         left: 7vw !important;
      }
   }
   
   .paper{
      &-link{
         top: -7vw;
         left: -12vw;
      }

      &-illu{
         width: 63vw;
         top: 40vw !important;
         left: 21vw !important;
      }

      &-h2{
         top: 65vw !important;
         left: 30vw !important;
      }
   }
   
   .metal{
      &-link{
         top: -10vw;
         left: 10vw;
      }

      &-illu{
         width: 33vw;
         top: 25vw !important;
         left: 31vw !important;
      }

      &-h2{
         top: 57vw !important;
         left: 27vw !important;
      }
   }

   .glass{
      &-link{
         top: -12vw;
         left: -16vw;
      }

      &-h2{
         top: 60vw !important;
         left: 38vw !important;
      }
   }

   .plastic{
      &-link{
         top: -10vw;
         left: 6vw;
      }

      &-illu{
         width: 26vw;
         top: 28vw !important;
         left: 33vw !important;
      }

      &-h2{
         top: 55vw !important;
         left: 18vw !important;
      }
   }

   /* map */
   .map{
      margin:0 calc(-1 * var(--main-pad-hrz));
      overflow: hidden;

      &__main{
         position: relative;
         left: -26vw;
         width: 140vw;
      }

      &__cattitle{
         padding-left: var(--main-pad-hrz);
      }

      &__catwrapper{
         overflow: auto;
      }

      &__categories{
         padding-left: var(--main-pad-hrz);

         li:last-child{
            padding-right: var(--main-pad-hrz);
         }
      }
   }
}